use device_query::Keycode;
use config::Config;
use lazy_static::lazy_static;

use std::sync::RwLock;

lazy_static! {
    pub static ref SETTINGS: RwLock<Config> = RwLock::new(Config::builder().add_source(config::File::with_name("te_config.toml")).build().unwrap());
}

pub fn str_to_key(s: &str) -> Result<Keycode, String> {
    match s.to_lowercase().as_str() {
        "key0" => Ok(Keycode::Key0),
        "0" => Ok(Keycode::Key0),
        "key1" => Ok(Keycode::Key1),
        "1" => Ok(Keycode::Key1),
        "key2" => Ok(Keycode::Key2),
        "2" => Ok(Keycode::Key2),
        "key3" => Ok(Keycode::Key3),
        "3" => Ok(Keycode::Key3),
        "key4" => Ok(Keycode::Key4),
        "4" => Ok(Keycode::Key4),
        "key5" => Ok(Keycode::Key5),
        "5" => Ok(Keycode::Key5),
        "key6" => Ok(Keycode::Key6),
        "6" => Ok(Keycode::Key6),
        "key7" => Ok(Keycode::Key7),
        "7" => Ok(Keycode::Key7),
        "key8" => Ok(Keycode::Key8),
        "8" => Ok(Keycode::Key8),
        "key9" => Ok(Keycode::Key9),
        "9" => Ok(Keycode::Key9),
        "a" => Ok(Keycode::A),
        "b" => Ok(Keycode::B),
        "c" => Ok(Keycode::C),
        "d" => Ok(Keycode::D),
        "e" => Ok(Keycode::E),
        "f" => Ok(Keycode::F),
        "g" => Ok(Keycode::G),
        "h" => Ok(Keycode::H),
        "i" => Ok(Keycode::I),
        "j" => Ok(Keycode::J),
        "k" => Ok(Keycode::K),
        "l" => Ok(Keycode::L),
        "m" => Ok(Keycode::M),
        "n" => Ok(Keycode::N),
        "o" => Ok(Keycode::O),
        "p" => Ok(Keycode::P),
        "q" => Ok(Keycode::Q),
        "r" => Ok(Keycode::R),
        "s" => Ok(Keycode::S),
        "t" => Ok(Keycode::T),
        "u" => Ok(Keycode::U),
        "v" => Ok(Keycode::V),
        "w" => Ok(Keycode::W),
        "x" => Ok(Keycode::X),
        "y" => Ok(Keycode::Y),
        "z" => Ok(Keycode::Z),
        "f1" => Ok(Keycode::F1),
        "f2" => Ok(Keycode::F2),
        "f3" => Ok(Keycode::F3),
        "f4" => Ok(Keycode::F4),
        "f5" => Ok(Keycode::F5),
        "f6" => Ok(Keycode::F6),
        "f7" => Ok(Keycode::F7),
        "f8" => Ok(Keycode::F8),
        "f9" => Ok(Keycode::F9),
        "f10" => Ok(Keycode::F10),
        "f11" => Ok(Keycode::F11),
        "f12" => Ok(Keycode::F12),
        "f13" => Ok(Keycode::F13),
        "f14" => Ok(Keycode::F14),
        "f15" => Ok(Keycode::F15),
        "f16" => Ok(Keycode::F16),
        "f17" => Ok(Keycode::F17),
        "f18" => Ok(Keycode::F18),
        "f19" => Ok(Keycode::F19),
        "f20" => Ok(Keycode::F20),
        "escape" => Ok(Keycode::Escape),
        "space" => Ok(Keycode::Space),
        " " => Ok(Keycode::Space),
        "lcontrol" => Ok(Keycode::LControl),
        "rcontrol" => Ok(Keycode::RControl),
        "lshift" => Ok(Keycode::LShift),
        "rshift" => Ok(Keycode::RShift),
        "lalt" => Ok(Keycode::LAlt),
        "ralt" => Ok(Keycode::RAlt),
        "command" => Ok(Keycode::Command),
        "loption" => Ok(Keycode::LOption),
        "roption" => Ok(Keycode::ROption),
        "lmeta" => Ok(Keycode::LMeta),
        "rmeta" => Ok(Keycode::RMeta),
        "enter" => Ok(Keycode::Enter),
        "up" => Ok(Keycode::Up),
        "down" => Ok(Keycode::Down),
        "left" => Ok(Keycode::Left),
        "right" => Ok(Keycode::Right),
        "backspace" => Ok(Keycode::Backspace),
        "capsLock" => Ok(Keycode::CapsLock),
        "tab" => Ok(Keycode::Tab),
        "home" => Ok(Keycode::Home),
        "end" => Ok(Keycode::End),
        "pageup" => Ok(Keycode::PageUp),
        "pagedown" => Ok(Keycode::PageDown),
        "insert" => Ok(Keycode::Insert),
        "delete" => Ok(Keycode::Delete),
        "numpad0" => Ok(Keycode::Numpad0),
        "numpad1" => Ok(Keycode::Numpad1),
        "numpad2" => Ok(Keycode::Numpad2),
        "numpad3" => Ok(Keycode::Numpad3),
        "numpad4" => Ok(Keycode::Numpad4),
        "numpad5" => Ok(Keycode::Numpad5),
        "numpad6" => Ok(Keycode::Numpad6),
        "numpad7" => Ok(Keycode::Numpad7),
        "numpad8" => Ok(Keycode::Numpad8),
        "numpad9" => Ok(Keycode::Numpad9),
        "numpadsubtract" => Ok(Keycode::NumpadSubtract),
        "numpadadd" => Ok(Keycode::NumpadAdd),
        "numpaddivide" => Ok(Keycode::NumpadDivide),
        "numpadmultiply" => Ok(Keycode::NumpadMultiply),
        "numpadequals" => Ok(Keycode::NumpadEquals),
        "numpadenter" => Ok(Keycode::NumpadEnter),
        "numpaddecimal" => Ok(Keycode::NumpadDecimal),
        "~" => Ok(Keycode::Grave),
        "`" => Ok(Keycode::Grave),
        "grave" => Ok(Keycode::Grave),
        "minus" => Ok(Keycode::Minus),
        "-" => Ok(Keycode::Minus),
        "equal" => Ok(Keycode::Equal),
        "=" => Ok(Keycode::Equal),
        "leftbracket" => Ok(Keycode::LeftBracket),
        "[" => Ok(Keycode::LeftBracket),
        "rightbracket" => Ok(Keycode::RightBracket),
        "]" => Ok(Keycode::RightBracket),
        "backslash" => Ok(Keycode::BackSlash),
        "\\" => Ok(Keycode::BackSlash),
        "semicolon" => Ok(Keycode::Semicolon),
        ";" => Ok(Keycode::Semicolon),
        "apostrophe" => Ok(Keycode::Apostrophe),
        "'" => Ok(Keycode::Apostrophe),
        "comma" => Ok(Keycode::Comma),
        "," => Ok(Keycode::Comma),
        "dot" => Ok(Keycode::Dot),
        "." => Ok(Keycode::Dot),
        "slash" => Ok(Keycode::Slash),
        "/" => Ok(Keycode::Slash),
        _ => Err(String::from("failed to parse keycode")),
    }
}